version: '3.4'

# Logging environment variables
x-logging-env: &logging-env
  hive_stack: ${COMPOSE_PROJECT_NAME}
  hive_service: # Set by each service

# Base app configuration
x-base-app: &base-app
  env_file:
    - stack.env
  networks:
    - internal
    - db-network
  logging: &logging
    driver: gelf
    options:
      gelf-address: "udp://127.0.0.1:12201"
      env: hive_stack,hive_service

# Service app configuration
x-service-app: &service-app
  <<: *base-app
  restart: unless-stopped
  depends_on:
    migration:
      condition: service_completed_successfully

services:

  # Backend services
  app:
    <<: *service-app
    image: beabee/beabee-legacy-app:${HIVE_VERSION:-__VERSION__}
    environment:
      <<: *logging-env
      hive_service: app

  api_app:
    <<: *service-app
    image: beabee/beabee-api-app:${HIVE_VERSION:-__VERSION__}
    environment:
      <<: *logging-env
      hive_service: api_app

  webhook_app:
    <<: *service-app
    image: beabee/beabee-webhook-app:${HIVE_VERSION:-__VERSION__}
    environment:
      <<: *logging-env
      hive_service: webhook_app

  cron_app:
    <<: *service-app
    image: beabee/beabee-cron-app:${HIVE_VERSION:-__VERSION__}
    environment:
      <<: *logging-env
      hive_service: cron

  # MinIO service
  minio:
    image: beabee/beabee-minio:${HIVE_VERSION:-__VERSION__}
    restart: unless-stopped
    volumes:
      - minio_data:/data
    environment:
      <<: *logging-env
      hive_service: minio
      MINIO_ROOT_USER: ${BEABEE_MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${BEABEE_MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_REGION: ${BEABEE_MINIO_REGION:-us-east-1}
      BEABEE_MINIO_BUCKET: ${BEABEE_MINIO_BUCKET:-uploads}
      BEABEE_MINIO_ENDPOINT: ${BEABEE_MINIO_ENDPOINT:-http://minio:9000}
    logging:
      <<: *logging
    networks:
      - internal

  # Migration service
  migration:
    <<: *base-app
    image: beabee/beabee-api-app:${HIVE_VERSION:-__VERSION__}
    command: 'npm run typeorm migration:run'
    environment:
      <<: *logging-env
      hive_service: migration

  # Helper to run commands (GELF logging disabled)
  run:
    <<: *base-app
    image: beabee/beabee-api-app:${HIVE_VERSION:-__VERSION__}
    profiles:
      - tools
    logging:
      driver: none

  # Frontend service
  frontend:
    image: beabee/beabee-frontend:${HIVE_VERSION:-__VERSION__}
    restart: unless-stopped
    environment:
      APP_BASE_URL: ${BEABEE_AUDIENCE}
      API_BASE_URL: /api/1.0
      CNR_MODE: ${BEABEE_CNR_MODE-}
      EXPERIMENTAL_FEATURES: ${BEABEE_EXPERIMENTAL_FEATURES-}
      APPSIGNAL_KEY: ${BEABEE_APPSIGNAL_KEY-${APPSIGNAL_KEY-}} # Fallback to APPSIGNAL_KEY if not set
      CAPTCHAFOX_KEY: ${BEABEE_CAPTCHAFOX_KEY-}
      MAPTILER_KEY: ${BEABEE_MAPTILER_KEY-}
    networks:
      - internal

  # Application router
  app_router:
    image: beabee/beabee-router:${HIVE_VERSION:-__VERSION__}
    restart: unless-stopped
    labels:
      - "traefik.docker.network=traefik-ingress"
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entryPoints=https"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${BEABEE_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certResolver=letsencrypt"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80"
    environment:
      LEGACY_APP_COOKIE_DOMAIN: ${BEABEE_COOKIE_DOMAIN}
      TRUSTED_ORIGINS: ${BEABEE_TRUSTEDORIGINS-}
    depends_on:
      - api_app
      - app
      - frontend
      - webhook_app
    networks:
      - internal
      - traefik-ingress

  # Telgram bot
  telegram_bot:
    profiles:
      - telegram
    image: beabee/telegram-bot:latest
    volumes:
      - telegram-bot_data:/app/telegram-bot/data
    restart: unless-stopped
    environment:
      BEABEE_AUDIENCE: ${BEABEE_AUDIENCE}
      API_PROXY_URL: ${BEABEE_AUDIENCE}
      TELEGRAM_TOKEN: ${BEABEE_TELEGRAM_BOT_TOKEN}
      BEABEE_API_TOKEN: ${BEABEE_TELEGRAM_BOT_API_TOKEN}
      BEABEE_SERVICE_SECRET: ${BEABEE_SERVICE_SECRET}
      TELEGRAM_BOT_ENVIRONMENT: ${BEABEE_ENVIRONMENT}
      DEBUG: grammy*
      API_BASE_URL: /api/1.0

networks:
  internal:
    driver: bridge
  db-network:
    external: true
  traefik-ingress:
    external: true

volumes:
  minio_data:
  telegram-bot_data:
