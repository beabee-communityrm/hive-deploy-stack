version: '3.4'

x-base-app: &base-app
  image: beabee/beabee:feat-762-new-deployment
  env_file:
    - stack.env
  networks:
    - internal
    - db-network
    - graylog_ingress
  logging:
    driver: gelf
    options:
      gelf-address: "udp://127.0.0.1:12201"

x-app: &app
  <<: *base-app
  restart: unless-stopped
  depends_on:
    migration:
      condition: service_completed_successfully

services:
  migration:
    <<: *base-app
    command: 'npm run typeorm migration:run'

  app: *app

  api_app:
    <<: *app
    command: 'node built/api/app'

  webhook_app:
    <<: *app
    command: 'node built/webhooks/app'

  img_upload_app:
    image: hascheksolutions/pictshare:72394f17
    restart: unless-stopped
    environment:
      CONTENTCONTROLLERS: IMAGE,TEXT
    init: true
    volumes:
      - upload_data:/var/www/data
    networks:
      - internal

  cron:
    <<: *app
    user: root
    command: 'crond -f -d 7'
    init: true
    networks:
      - internal

  router:
    image: beabee/router:release
    restart: unless-stopped
    networks:
      - internal

  run:
    <<: *app
    profiles:
      - tools
    logging:
      driver: none
    networks:
      - internal

  frontend:
    image: beabee/frontend:release
    restart: unless-stopped
    environment:
      APP_BASE_URL: ${BEABEE_AUDIENCE}
      API_BASE_URL: /api/1.0
      CNR_MODE: ${BEABEE_CNR_MODE}
    networks:
      - internal

  app_router:
    image: beabee/app-router:latest
    restart: unless-stopped
    labels:
      - "traefik.docker.network=traefik-ingress"
      - "traefik.enable=true"
      - "traefik.http.routers.${BEABEE_NAME}.entryPoints=https"
      - "traefik.http.routers.${BEABEE_NAME}.rule=Host(`${BEABEE_DOMAIN}`)"
      - "traefik.http.routers.${BEABEE_NAME}.tls.certResolver=letsencrypt"
      - "traefik.http.services.${BEABEE_NAME}.loadbalancer.server.port=80"
    environment:
      LEGACY_APP_URL: http://router
      LEGACY_APP_COOKIE_DOMAIN: ${BEABEE_COOKIE_DOMAIN}
      FRONTEND_APP_URL: http://frontend
    networks:
      - internal
      - traefik-ingress

networks:
  internal:
    driver: bridge
  db-network:
    external: true
  graylog_ingress:
    external: true
  traefik-ingress:
    external: true

volumes:
  upload_data:
